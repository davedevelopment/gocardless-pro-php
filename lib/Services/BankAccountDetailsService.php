<?php
/**
 * WARNING: Do not edit by hand, this file was generated by Crank:
 *
 * https://github.com/gocardless/crank
 */

namespace GoCardlessPro\Services;

use \GoCardlessPro\Core\Paginator;
use \GoCardlessPro\Core\Util;
use \GoCardlessPro\Core\ListResponse;
use \GoCardlessPro\Resources\BankAccountDetail;
use \GoCardlessPro\Core\Exception\InvalidStateException;


/**
 * Service that provides access to the BankAccountDetail
 * endpoints of the API
 */
class BankAccountDetailsService extends BaseService
{

    protected $envelope_key   = 'bank_account_details';
    protected $resource_class = '\GoCardlessPro\Resources\BankAccountDetail';


    /**
     * Get encrypted bank details
     *
     * Example URL: /bank_account_details/:identity
     *
     * @param  string               $identity Unique identifier, beginning with "BA".
     * @param  array<string, mixed> $params   An associative array for any params
     * @return BankAccountDetail
     **/
    public function get($identity, $params = array())
    {
        $path = Util::subUrl(
            '/bank_account_details/:identity',
            array(
                
                'identity' => $identity
            )
        );
        if(isset($params['params'])) { $params['query'] = $params['params'];
            unset($params['params']);
        }

        
        $response = $this->api_client->get($path, $params);
        

        return $this->getResourceForResponse($response);
    }

}
